version: "2"

services:
### Go Container #######################################
  go:
    build:
      context: ./go
    volumes:
      - ${GO_APPLICATION_PATH}:/go/src/${GO_PROJECT_NAME}

    working_dir: /go/src/${GO_PROJECT_NAME}
    command: bash -c "glide install && glide update && go run main.go"

    env_file:
      - ${GO_APPLICATION_PATH}/.env
    links:
      - redis
      - mongo
    ports:
      - "${GO_PORT}:3000"
    networks:
      - frontend
      - backend

### NodeJS/Yarn Container #######################################
  node:
    build: ./node
    environment:
      - NODE_ENV="${NODE_ENV}"
    volumes:
      - ${NODE_APPLICATION_PATH}:/usr/src/app
    working_dir: /usr/src/app
    command: "yarn install"
    networks:
      - backend

### Redis Container #######################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "6379:6379"
    networks:
      - backend

### MongoDB Container #######################################
  mongo:
    build: ./mongo
    volumes:
      - ${DATA_SAVE_PATH}/mongo:/data/db
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - backend

### Networks Setup ############################################
networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################
volumes:
  redis:
    driver: "local"
  mongo:
    driver: "local"
